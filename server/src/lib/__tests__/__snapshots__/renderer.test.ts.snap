// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src/lib/renderer renderIndex should return index page 1`] = `
"<!DOCTYPE html>
<html>
<head>
	<title>Coub</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
</head>
<body>

<style type="text/css">
	body {
		font-family: Helvetica, Arial, "Lucida Grande", sans-serif;
		font-size: 15px;
	}

	.coub {
		width: 640px;
		max-width: 100%;
		margin: 2em auto;
		position: relative;
	}

	video {
		width: 100%;
		max-height: 480px;
		background-color: #fafafa;
		border: 1px solid #e1e1e1;
		border-radius: 6px;
		cursor: pointer;
	}

	audio {
		display: none;
	}

	.fullscreen-toggle {
		font-size: 2em;
		color: white;
		position: absolute;
		right: 0.25em;
		top: 0.25em;
		line-height: 100%;
		cursor: pointer;
		opacity: 0.5;
	}

	.fullscreen-toggle:hover {
		opacity: 0.75;
	}

	:fullscreen video {
		max-height: none;
		height: 100%;
		background: none;
		border: none;
	}

	.description {
		margin-top: 0.5em;
	}

	.description * {
		line-height: 26px;
	}

	.stats {
		float: right;
		margin-left: 1em;
	}

	.title {
		font-size: 22px;
		font-weight: bold;
		letter-spacing: -0.4px;
	}

	.external-link {
		color: #2f4ed9;
	}

	.like {
		color: red;
	}
</style>

<div class="coubs">

<div class="coub">
	<video loop muted preload="none" poster="media/internalCoub/internalCoub.jpg" src="media/internalCoub/internalCoub.mp4"></video>
	
	<a class="fullscreen-toggle">&#x26F6;</a>
	<div class="description">
		<div class="stats"><span class="like">&#x2764;</span> 1 &nbsp; &#x1F441; 2</div>
		<div class="title">Title: internalCoub</div>
		&nbsp;
	</div>
</div>
<div class="coub">
	<video loop muted preload="none" poster="media/externalCoub/externalCoub.jpg" src="media/externalCoub/externalCoub.mp4"></video>
	
	<a class="fullscreen-toggle">&#x26F6;</a>
	<div class="description">
		<div class="stats"><span class="like">&#x2764;</span> 1 &nbsp; &#x1F441; 2</div>
		<div class="title">Title: externalCoub</div>
		<div class="external">service1: <a class="external-link" href="url1" target="_blank">title1</a></div>
<div class="external">service2: <a class="external-link" href="url2" target="_blank">title2</a></div>
	</div>
</div>
<div class="coub">
	<video loop muted preload="none" poster="media/audioCoub/audioCoub.jpg" src="media/audioCoub/audioCoub.mp4"></video>
	<audio src="media/audioCoub/audioCoub.mp3" loop controls></audio>
	<a class="fullscreen-toggle">&#x26F6;</a>
	<div class="description">
		<div class="stats"><span class="like">&#x2764;</span> 1 &nbsp; &#x1F441; 2</div>
		<div class="title">Title: audioCoub</div>
		&nbsp;
	</div>
</div>

</div>

<script type="text/javascript">
window.addEventListener('load', function () {
	var currentVideo = null;
	var topEdges = [];

	function start(video) {
		if (currentVideo) {
			if (currentVideo === video) return;
			currentVideo.pause();
		}
		currentVideo = video;
		video.play();
	}

	function stop(video) {
		currentVideo = null;
		video.pause();
	}

	Array.from(document.querySelectorAll('video')).forEach(function(video) {
		const container = video.parentNode;
		video.muted = true;
		topEdges[container.offsetTop] = video;
		var audio = video.nextElementSibling;
		var fullscreen = audio.nextElementSibling;

		video.onplay = function(){
			audio.play();
		};

		video.onpause = function(){
			audio.pause();
		};

		video.onclick = function() {
			video === currentVideo ? stop(video) : start(video);
		};

		fullscreen.onclick = function() {
			document.fullscreenElement ? document.exitFullscreen() : container.requestFullscreen();
		};
	});

	var topEdgeKeys = Object.keys(topEdges);

	window.scrollTimeout = null;

	window.onscroll = function(){
		if (window.scrollTimeout) clearTimeout(window.scrollTimeout);

		window.scrollTimeout = setTimeout(function(){
			for (var i in topEdgeKeys) {
				if (topEdgeKeys[i] > window.scrollY) {
					if (currentVideo) {
						start(topEdges[topEdgeKeys[i]]);
					}
					break;
				}
			}
		}, 100);
	};
});
</script>

</body>
</html>"
`;
